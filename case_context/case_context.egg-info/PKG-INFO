Metadata-Version: 2.4
Name: case-context
Version: 0.1.0
Summary: Strategic case study analysis tool
Author: Tyler Bustard
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: spacy==3.7.2
Requires-Dist: en-core-web-sm==3.7.1
Requires-Dist: python-docx==1.1.0
Requires-Dist: pytest==8.0.0
Requires-Dist: python-dotenv>=1.1.0
Requires-Dist: rapidfuzz>=2.13.7

# Strategic Case Auto-Writer

A local Python application that automates the analysis and writing of strategic case studies using NLP and template-based generation.

## Architecture

```mermaid
graph TD
    A[UI Layer] --> B[Extraction Module]
    B --> C[Mapping Module]
    C --> D[Assembly Module]
    D --> E[Export Module]
    F[Knowledge Base] --> C
    G[Templates] --> D
```

## Quick Start

1. Install all dependencies (includes spaCy & its model):
   ```bash
   pip install -r requirements.txt
   ```
2. Verify the spaCy model:
   ```bash
   python -c "import spacy; spacy.load('en_core_web_sm')"
   ```
   If that errors, run:
   ```bash
   python -m spacy download en_core_web_sm
   ```

2. Run the application:
```bash
streamlit run app.py
```

## Dependencies

- Python 3.11+
- FastAPI for local server
- spaCy (`en_core_web_sm`) for NLP processing
- python-docx for document generation
- pytest for testing
- Additional requirements in `requirements.txt`

## Project Structure

- `app.py` - Main application entry point
- `config.py` - Configuration and constants
- `extract.py` - NLP-based text extraction
- `map.py` - Concept mapping and knowledge base integration
- `assemble.py` - Template selection and answer generation
- `export.py` - Document export functionality
- `knowledge_base.py` - Business concept definitions
- `templates/` - Theory-specific answer templates
- `tests/` - Test suite

## Development

- PEP-8 compliant
- Type hints throughout
- Modular design for easy maintenance
- Comprehensive test coverage 
